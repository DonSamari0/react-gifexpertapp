{"version":3,"sources":["components/CategoryAdd.js","components/GifDisplay.js","helpers/getGifs.js","hooks/useFetchGifs.js","components/GifGrid.js","GifExpertApp.js","index.js"],"names":["CategoryAdd","setCategories","categories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","find","i","console","log","trim","length","type","value","onChange","target","GifDisplay","title","url","className","src","alt","getGifs","category","a","query","fetch","request","json","data","gifs","map","img","id","images","downsized_medium","useFetchGifs","loading","state","setState","useEffect","then","GifGrid","propType","PropTypes","func","isRequired","GifExpertApp","ReactDOM","render","document","getElementById"],"mappings":"oMAmCeA,EAhCY,SAAC,GAAiC,IAAhCC,EAA+B,EAA/BA,cAAeC,EAAgB,EAAhBA,WAAgB,EACpBC,mBAAS,IADW,mBACjDC,EADiD,KACrCC,EADqC,KAmBxD,OACI,uBAAMC,SAfW,SAACC,GAClBA,EAAEC,iBACIN,EAAWO,MAAM,SAAAC,GAAC,OAAIA,IAAMN,MAQ9BO,QAAQC,IAAI,aACZP,EAAc,KARND,EAAWS,OAAOC,OAAS,GAC3Bb,EAAc,CAACG,GAAF,mBAAiBF,KAC9BG,EAAc,KAEdM,QAAQC,IAAI,mCAQxB,UACI,8CACA,uBACIG,KAAK,OACLC,MAAOZ,EACPa,SAvBc,SAAC,GAAa,IAAZC,EAAW,EAAXA,OACxBb,EAAca,EAAOF,c,wBCIdG,EARW,SAAC,GAAkB,IAAjBC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,IAC/B,OACI,sBAAKC,UAAU,0CAAf,UACI,qBAAKC,IAAKF,EAAKG,IAAKJ,IACpB,kCAAKA,EAAL,W,uBCqBGK,EA1BF,uCAAG,WAAOC,GAAP,yBAAAC,EAAA,4DAII,mCACVC,EAAQF,EACA,KACRL,EAPM,uDAII,mCAJJ,cAO6DO,EAP7D,kBAME,MANF,SAUUC,MAAOR,GAVjB,cAUNS,EAVM,gBAWWA,EAAQC,OAXnB,uBAWJC,EAXI,EAWJA,KACRrB,QAAQC,IAAIoB,GACNC,EAAOD,EAAKE,KAAI,SAAAC,GACd,MAAO,CACHC,GAAID,EAAIC,GACRhB,MAAOe,EAAIf,MACXC,IAAKc,EAAIE,OAAOC,iBAAiBjB,QAjBjC,kBAsBDY,GAtBC,4CAAH,sDCmBEM,EAjBa,SAAEb,GAAe,IAAD,EACdvB,mBAAS,CAC/B6B,KAAM,GACNQ,SAAS,IAH2B,mBACjCC,EADiC,KAC1BC,EAD0B,KAcxC,OARAC,qBAAW,WACPlB,EAASC,GAAWkB,MAAM,SAACX,GAAUS,EAAU,CAC3CV,KAAMC,EACNO,SAAS,SAGd,CAAEd,IAEIe,GCXAI,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAAc,EACJa,EAAcb,GAAjCW,EADuB,EAC5BL,KAAaQ,EADe,EACfA,QACpB,OACI,qCACI,mCAAOd,EAAP,OACCc,GAAW,yCACZ,qBAAKlB,UAAU,YAAf,SAEQe,EAAOH,KAAM,SAAEC,GAAF,OAET,aADQ,CACP,EAAD,eAGQA,GAFCA,EAAIC,aAUtBS,IAEfA,EAAQC,SAAW,CACfpB,SAAUqB,IAAUC,KAAKC,YCzBtB,IAAMC,EAAe,WAAO,IAAD,EACM/C,mBAAS,CAAC,cADhB,mBACvBD,EADuB,KACXD,EADW,KAM9B,OACI,qCACI,8CACA,uBACA,cAAC,EAAD,CAAaA,cAAiBA,EAAeC,WAAaA,IACpDA,EAAWgC,KAAI,SAACR,GACd,OAAO,cAAC,EAAD,CAEPA,SAAUA,GADHA,U,MCb3ByB,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.7ac49ed7.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const CategoryAdd = ({setCategories, categories}) => {\r\n    const [inputValue, setInputValue] = useState('');\r\n    const handleInputChange = ({target}) =>{\r\n        setInputValue(target.value);\r\n    };\r\n    const handleSubmit = (e) =>{\r\n        e.preventDefault();\r\n        if( !(categories.find( i => i === inputValue)) ){\r\n                if (inputValue.trim().length > 2){\r\n                    setCategories([inputValue, ...categories]);\r\n                    setInputValue('');\r\n                }else{\r\n                    console.log('Tama√±o Minimo requerido: 2 ');\r\n                };\r\n        }else{\r\n            console.log('Ya existe');\r\n            setInputValue('');\r\n        };\r\n    };\r\n    return (\r\n        <form onSubmit={ handleSubmit }>\r\n            <h2>Category Add</h2>\r\n            <input \r\n                type=\"text\"\r\n                value={inputValue}\r\n                onChange = {handleInputChange}\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\n\r\nexport default CategoryAdd;\r\n\r\nCategoryAdd.propTypes ={\r\n    setCategories : PropTypes.func.isRequired\r\n}","import React from 'react'\r\n\r\nexport const GifDisplay = ({title, url}) => {\r\n    return (\r\n        <div className=\"card  animate__animated animate__fadeIn\">\r\n            <img src={url} alt={title}></img>\r\n            <p> {title} </p>\r\n        </div>\r\n    )\r\n}\r\nexport default GifDisplay;","\r\nconst getGifs = async( category ) => {\r\n\r\n    \r\n\r\n    const api_key = \"cJA3EgQ4cHZ2f3AhMFsCtK799N97idza\";\r\n    const query = category;\r\n    const limit = \"10\";\r\n    const url = `https://api.giphy.com/v1/gifs/search?api_key=${api_key}&q=${query}&limit=${limit}` ;\r\n\r\n\r\n    const request = await fetch( url );\r\n    const { data } = await request.json();\r\n    console.log(data);\r\n    const gifs = data.map(img => {\r\n            return {\r\n                id: img.id,\r\n                title: img.title,\r\n                url: img.images.downsized_medium.url\r\n            }\r\n        });\r\n        \r\n        //console.log(gifs);\r\n        return gifs;\r\n        \r\n}\r\n\r\nexport default getGifs;","import {useState, useEffect} from 'react';\r\nimport getGifs from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n    \r\n    useEffect( () => {\r\n        getGifs( category ).then( (gifs) => {setState( {\r\n            data: gifs,\r\n            loading: false\r\n            });\r\n        });\r\n    }, [ category ])\r\n    \r\n    return ( state )\r\n}\r\n\r\nexport default useFetchGifs;\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types'\r\nimport GifDisplay from '../components/GifDisplay';\r\nimport useFetchGifs from '../hooks/useFetchGifs';\r\n\r\n\r\nexport const GifGrid = ({category}) => {\r\n    const {data:images, loading} = useFetchGifs( category );\r\n    return (\r\n        <>\r\n            <h2> { category } </h2>\r\n            {loading && <p>Cargando</p>}\r\n            <div className=\"card-grid\">\r\n                {\r\n                    images.map(  ( img /*{id, title, url}*/  ) => (\r\n                                //<li key= {id}>{title}</li>\r\n                        <GifDisplay \r\n                            key={img.id}\r\n                            // alt={title} url={url} \r\n                            {...img}    />\r\n                    ))\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GifGrid;\r\n\r\nGifGrid.propType = {\r\n    category: PropTypes.func.isRequired\r\n}","import React, { useState } from 'react'\r\n\r\nimport CategoryAdd from './components/CategoryAdd'\r\nimport GifGrid from './components/GifGrid'\r\n\r\nexport const GifExpertApp = () => {\r\n    const [categories, setCategories] = useState(['One Punch'])\r\n    /* const handleAdd = ()=>{\r\n        //setCategories(categories.push('otro'));  no es posible\r\n        //setCategories([...categories, 'One Piece']); \r\n    } */\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <hr/>\r\n            <CategoryAdd setCategories = {setCategories} categories= {categories}/>\r\n                { categories.map((category)=>{\r\n                    return <GifGrid \r\n                    key = {category}\r\n                    category={category}/>\r\n                    })\r\n                }\r\n        </>\r\n    )\r\n};\r\n\r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport {GifExpertApp} from './GifExpertApp';\nimport './index.css';\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}